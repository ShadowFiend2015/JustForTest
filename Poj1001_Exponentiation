#include <iostream>
#include <vector>
#include <string>

using namespace std;

void print(const vector<int>& x)
{
    for(int i = 0; i != x.size(); ++i)  cout << x[i];
    cout << endl;
}

void p(const vector<int>& x)
{
    for(int i = x.size()-1; i >= 0; --i)    cout << x[i];
    cout << endl;
}

vector<int> mul(const vector<int>& x, const vector<int>& y)
{
    vector<int> result(x.size()+y.size(), 0);
    for(int i = y.size()-1; i >= 0; --i)
    {
        int flag = 0;
        for(int j = x.size()-1; j >=0; --j)
        {
            int sub_bit = y[i] * x[j];
            sub_bit += flag + result[i+j+1];
            result[i+j+1] = sub_bit%10;
            flag = sub_bit/10;
        }
        result[i] = flag;
    }
    vector<int> ans;
    if(result[0] == 0)
    {
        for(int i = 1; i < result.size(); ++i)  ans.push_back(result[i]);
        return ans;
    }
    else return result;
}

void print_ans(vector<int> ans, int bits)
{
    if(ans[0] == 0)
    {
        cout << '.';
        for(int i = 1; i < ans.size(); ++i) cout << ans[i];
        cout << endl;
    }
    else
    {
        for(int i = 0; i != ans.size()-bits; ++i)   cout << ans[i];
        if(bits == 0)   { cout << endl; return;}
        cout << '.';
        for(int i = ans.size()-bits; i != ans.size(); ++i)  cout << ans[i];
        cout << endl;
    }
}

int main()
{
    string s;
    int n;
    int bits;
    vector<int> num;
    vector<int> ans;
    while(cin >> s >> n)
    {
        bits = 0;
        for(int i = 0; i != s.size(); ++i)
        {
            if(s[i] == '.') bits = s.size()-i-1;
            else num.push_back(s[i]-'0');
        }
        for(int i = num.size()-1; num[i]==0 && bits >0; --i, --bits)   num.pop_back();
        ans = num;
        for(int i = 0; i < n-1; ++i)    ans = mul(ans, num);
        bits *= n;
        print_ans(ans, bits);
        num.clear();
    }
    return 0;
}
