#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

void print_vector(const vector<int>& a)
{
    for(int i = 0; i != a.size(); ++i)
        cout << a[i];
    cout << endl;
}

void print_line(const vector<int>& a, int width)
{
    int space = width - a.size();
    while(space--)
        cout << ' ';
    for(int i = 0; i != a.size(); ++i)
        cout << a[i];
    cout << endl;
}

void print_line(const vector<int>& a, int width, char op)
{
    int space = width - a.size()-1;
    while(space--)
        cout << ' ';
    cout << op;
    for(int i = 0; i != a.size(); ++i)
        cout << a[i];
    cout << endl;
}

void print_line(int width)
{
    for(int i = 0; i != width; ++i)
        cout << '-';
    cout << endl;
}

void reversal_array(vector<int>& a)
{
    int size = a.size();
    for(int i = 0; i != size / 2; ++i)
    {
        int temp = a[i];
        a[i] = a[size-i-1];
        a[size-i-1] = temp;
    }
}

void plus_two(const vector<int>& a, const vector<int>& b)
{
    vector<int> result;
    int width = 0;
    int flag = 0;
    for(int i = 0; i < a.size() || i < b.size(); ++i)
    {
        int x = i >= a.size() ? 0 : a[a.size()-i-1];
        int y = i >= b.size() ? 0 : b[b.size()-i-1];
        result.push_back((x + y + flag) % 10);
        flag = (x + y + flag) / 10;
    }
    if(flag)
        result.push_back(1);
    reversal_array(result);
    width = b.size()+1 > result.size() ? b.size()+1 : result.size();
    print_line(a, width);
    print_line(b, width, '+');
    int length_line = max(b.size()+1, result.size());
    for(int i = 0; i != width - length_line; ++i)
        cout << ' ';
    print_line(length_line);
    print_line(result, width);
    cout << endl;
}

void minus_two(const vector<int>& a, const vector<int>& b)
{
    vector<int> result;
    int width = a.size() == b.size() ? a.size()+1 : a.size();
    int flag = 0;
    for(int i = 0; i != a.size(); ++i)
    {
        int x = a[a.size()-i-1];
        int y = i >= b.size() ? 0 : b[b.size()-i-1];
        if(x < y + flag)
        {
            result.push_back(x + 10 - y - flag);
            flag = 1;
        }
        else
        {
            result.push_back(x - y - flag);
            flag = 0;
        }
    }
    for(int i = result.size() - 1; i > 0 && result[i] == 0; --i)
        result.pop_back();
    reversal_array(result);
    print_line(a, width);
    print_line(b, width, '-');
    int length_line = max(b.size()+1, result.size());
    for(int i = 0; i != width - length_line; ++i)
        cout << ' ';
    print_line(length_line);
    print_line(result, width);
    cout << endl;
}

void multiply_two(const vector<int>& a, const vector<int>& b)
{
    vector<int> result(a.size() + b.size(), 0);
    vector<vector<int> > all_lines;
    vector<int> sub_result;
    int width = 0;
    for(int j = 0; j != b.size(); ++j)
    {
        int flag = 0;
        sub_result.clear();
        if(b[b.size() - j - 1] == 0)
        {
            sub_result.push_back(0);
            all_lines.push_back(sub_result);
            continue;
        }
        for(int i = 0; i != a.size(); ++i)
        {
            int temp = b[b.size() - j - 1] * a[a.size() - i - 1] + flag;
            sub_result.push_back(temp % 10);
            flag = temp / 10;
        }
        if(flag)
            sub_result.push_back(flag);
        all_lines.push_back(sub_result);
        flag = 0;
        for(int i = 0; i != sub_result.size(); ++i)
        {
            int temp = result[i+j] + flag + sub_result[i];
            result[i+j] = temp % 10;
            flag = temp / 10;
        }
        if(flag)    result[sub_result.size()+j] = flag;

    }
    if(result.back() == 0)
        result.pop_back();
    int length_line = max(all_lines[0].size(), b.size() + 1);
    width = max((int)result.size(), length_line);
    print_line(a, width);
    print_line(b, width, '*');
    for(int i = 0; i != width - length_line; ++i)
        cout << ' ';
    print_line(length_line);
    for(int j = 0; j < b.size(); ++j)
    {
        reversal_array(all_lines[j]);
        print_line(all_lines[j], width - j);
    }
    if(b.size() == 1)
    {
        cout << endl;
        return;
    }
    length_line = result.size();
    for(int i = 0; i != width - length_line; ++i)
        cout << ' ';
    print_line(length_line);
    reversal_array(result);
    print_line(result, width);
    cout << endl;
}

int main()
{
    int n;
    cin >> n;
    string s;
    char op;
    while(n--)
    {
        cin >> s;
        vector<int> a, b;
        int i = 0;
        for(; s[i] != '+' && s[i] != '-' && s[i] != '*'; ++i)
            a.push_back(s[i] - '0');
        op = s[i];
        i++;
        for(; i != s.size(); ++i)
            b.push_back(s[i] - '0');
        switch (op)
        {
            case '+' : plus_two(a, b);
                       break;
            case '-' : minus_two(a, b);
                       break;
            case '*' : multiply_two(a, b);
                       break;
        }
    }
    return 0;
}
